"""Add AuditLog model

Revision ID: 3aea104a72ce
Revises: 9bb9f08216c2
Create Date: 2025-06-19 14:29:34.557609

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '3aea104a72ce'
down_revision = '9bb9f08216c2'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('security_alert')
    with op.batch_alter_table('audit_log', schema=None) as batch_op:
        batch_op.add_column(sa.Column('performed_by_user_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('action_type', sa.String(length=100), nullable=False))
        batch_op.add_column(sa.Column('target_entity_type', sa.String(length=50), nullable=True))
        batch_op.add_column(sa.Column('target_entity_id', sa.String(length=250), nullable=True))
        batch_op.add_column(sa.Column('status', sa.String(length=20), nullable=False))
        batch_op.alter_column('user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.drop_constraint('audit_log_performed_by_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'users', ['performed_by_user_id'], ['id'])
        batch_op.drop_column('action')
        batch_op.drop_column('location')
        batch_op.drop_column('ip_address')
        batch_op.drop_column('performed_by')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('audit_log', schema=None) as batch_op:
        batch_op.add_column(sa.Column('performed_by', sa.INTEGER(), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('ip_address', sa.VARCHAR(length=45), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('location', sa.VARCHAR(length=255), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('action', sa.VARCHAR(length=100), autoincrement=False, nullable=False))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('audit_log_performed_by_fkey', 'users', ['performed_by'], ['id'])
        batch_op.alter_column('user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.drop_column('status')
        batch_op.drop_column('target_entity_id')
        batch_op.drop_column('target_entity_type')
        batch_op.drop_column('action_type')
        batch_op.drop_column('performed_by_user_id')

    op.create_table('security_alert',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('attempt_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('alert_type', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('severity', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('details', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('timestamp', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('resolved', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('resolved_by', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('resolved_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('resolution_note', sa.TEXT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['attempt_id'], ['authentication_attempt.id'], name='security_alert_attempt_id_fkey'),
    sa.ForeignKeyConstraint(['resolved_by'], ['users.id'], name='security_alert_resolved_by_fkey'),
    sa.PrimaryKeyConstraint('id', name='security_alert_pkey')
    )
    # ### end Alembic commands ###
